{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"04_LM_PP_Attachment_classification","provenance":[{"file_id":"https://github.com/liadmagen/NLP-Course/blob/master/exercises_notebooks/04_LM_PP_Attachment_classification.ipynb","timestamp":1642458628467}],"collapsed_sections":["ZEHsHqnBEnM0","MRYNWqK-Gu3F","vyls_Vs7MxYj"]},"kernelspec":{"name":"python3","display_name":"Python 3"},"widgets":{"application/vnd.jupyter.widget-state+json":{"535e8d7a611c48c6be1368df1828995e":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_view_name":"HBoxView","_dom_classes":[],"_model_name":"HBoxModel","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.5.0","box_style":"","layout":"IPY_MODEL_5cf16cee9fff4cadb3a51615a0bdfcc5","_model_module":"@jupyter-widgets/controls","children":["IPY_MODEL_7f0557a3fd4a45c5ab5c703a2bf40096","IPY_MODEL_59553ac94cfb4362ad09f729cacaeb81","IPY_MODEL_c2705179cb16483a9c1bbd3a2f079d58"]}},"5cf16cee9fff4cadb3a51615a0bdfcc5":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"7f0557a3fd4a45c5ab5c703a2bf40096":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_view_name":"HTMLView","style":"IPY_MODEL_ca698843f40648a498c4977eb7b85784","_dom_classes":[],"description":"","_model_name":"HTMLModel","placeholder":"​","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":"","_view_count":null,"_view_module_version":"1.5.0","description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_1bdf7a4a1b574a5bb556dc03fe62dea0"}},"59553ac94cfb4362ad09f729cacaeb81":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_view_name":"ProgressView","style":"IPY_MODEL_93d987644eaf4a3598303083cbc04fdc","_dom_classes":[],"description":"","_model_name":"FloatProgressModel","bar_style":"success","max":1,"_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":1,"_view_count":null,"_view_module_version":"1.5.0","orientation":"horizontal","min":0,"description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_2c13f34a5e8343cca5430406c881492b"}},"c2705179cb16483a9c1bbd3a2f079d58":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_view_name":"HTMLView","style":"IPY_MODEL_cb35c6b8260d4390a4458bd2ded48c93","_dom_classes":[],"description":"","_model_name":"HTMLModel","placeholder":"​","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":" 25858/? [00:00&lt;00:00, 68255.82it/s]","_view_count":null,"_view_module_version":"1.5.0","description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_33ab5d19c3ce461f8db125ea5df869b8"}},"ca698843f40648a498c4977eb7b85784":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_view_name":"StyleView","_model_name":"DescriptionStyleModel","description_width":"","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","_model_module":"@jupyter-widgets/controls"}},"1bdf7a4a1b574a5bb556dc03fe62dea0":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"93d987644eaf4a3598303083cbc04fdc":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_view_name":"StyleView","_model_name":"ProgressStyleModel","description_width":"","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","bar_color":null,"_model_module":"@jupyter-widgets/controls"}},"2c13f34a5e8343cca5430406c881492b":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":"20px","min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"cb35c6b8260d4390a4458bd2ded48c93":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_view_name":"StyleView","_model_name":"DescriptionStyleModel","description_width":"","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","_model_module":"@jupyter-widgets/controls"}},"33ab5d19c3ce461f8db125ea5df869b8":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}}}}},"cells":[{"cell_type":"markdown","metadata":{"id":"w-EolZK1El9L"},"source":["# PP Attachment \n","\n","Let's try out the Preposition Phrase attachment classification!\n","\n","Through this exercise, you'll practice classification of linguistic aspects of text."]},{"cell_type":"markdown","metadata":{"id":"ZEHsHqnBEnM0"},"source":["# Setup\n","Loading the data"]},{"cell_type":"code","metadata":{"id":"IQeJMBC9EjQj"},"source":["import csv\n","\n","from tqdm.notebook import tqdm\n","from random import choice\n","from urllib.request import urlopen\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"f5y8hLSTDcmT"},"source":["def read_pp_examples(file_url):\n","    pp_examples = []\n","    \n","    for line in tqdm(urlopen(file_url)):\n","      line = line.decode(\"utf-8\").strip().split()\n","      assert(len(line) == 5)\n","      v,n1,p,n2,answer = line\n","      pp_examples.append( {'answer':answer,'pp':(v,n1,p,n2)} )\n","    return pp_examples"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"_kc6IkpCDphJ"},"source":["pp_samples_url = 'https://raw.githubusercontent.com/liadmagen/Modeling_course/main/data/pp_examples.txt'"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"4i0rtj1RFkug","outputId":"83c9f436-fc9f-4048-e2f7-d13a815182da","colab":{"base_uri":"https://localhost:8080/","height":49,"referenced_widgets":["535e8d7a611c48c6be1368df1828995e","5cf16cee9fff4cadb3a51615a0bdfcc5","7f0557a3fd4a45c5ab5c703a2bf40096","59553ac94cfb4362ad09f729cacaeb81","c2705179cb16483a9c1bbd3a2f079d58","ca698843f40648a498c4977eb7b85784","1bdf7a4a1b574a5bb556dc03fe62dea0","93d987644eaf4a3598303083cbc04fdc","2c13f34a5e8343cca5430406c881492b","cb35c6b8260d4390a4458bd2ded48c93","33ab5d19c3ce461f8db125ea5df869b8"]},"executionInfo":{"status":"ok","timestamp":1643575439475,"user_tz":-60,"elapsed":379,"user":{"displayName":"liad magen","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhooSp6YPa71TxASiE-qXyTjNNqr4N5dTOQvTcZ=s64","userId":"03421638585722407653"}}},"source":["pp_examples = read_pp_examples(pp_samples_url)\n"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"application/vnd.jupyter.widget-view+json":{"model_id":"535e8d7a611c48c6be1368df1828995e","version_minor":0,"version_major":2},"text/plain":["0it [00:00, ?it/s]"]},"metadata":{}}]},{"cell_type":"markdown","metadata":{"id":"MRYNWqK-Gu3F"},"source":["# Step #1 - looking at the data\n","\n","Always look at the data first!"]},{"cell_type":"code","metadata":{"id":"a59ypmWhGlIZ","outputId":"1236a0fa-4b78-49ce-b962-702e8ddb3adb","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1643575443796,"user_tz":-60,"elapsed":322,"user":{"displayName":"liad magen","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhooSp6YPa71TxASiE-qXyTjNNqr4N5dTOQvTcZ=s64","userId":"03421638585722407653"}}},"source":["len(pp_examples)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["25858"]},"metadata":{},"execution_count":7}]},{"cell_type":"code","metadata":{"id":"_W9FOJmkG1HF","outputId":"01761055-d916-4396-98fb-6a8852294426","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1643575444148,"user_tz":-60,"elapsed":10,"user":{"displayName":"liad magen","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhooSp6YPa71TxASiE-qXyTjNNqr4N5dTOQvTcZ=s64","userId":"03421638585722407653"}}},"source":["print(choice(pp_examples))"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["{'answer': 'V', 'pp': ('sell', 'today', 'at', 'Board')}\n"]}]},{"cell_type":"code","metadata":{"id":"iLCTVAyAG4Cm","outputId":"b21a3639-f21f-44b4-97a6-7749c631def0","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1643575446052,"user_tz":-60,"elapsed":326,"user":{"displayName":"liad magen","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhooSp6YPa71TxASiE-qXyTjNNqr4N5dTOQvTcZ=s64","userId":"03421638585722407653"}}},"source":["example = choice(pp_examples)\n","example['pp']"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["('including', 'privatization', 'of', 'industry')"]},"metadata":{},"execution_count":9}]},{"cell_type":"code","metadata":{"id":"W4tkr91VHHC0","outputId":"9b0a0924-9d55-4f0c-e1c1-6da2235efa9a","colab":{"base_uri":"https://localhost:8080/","height":35},"executionInfo":{"status":"ok","timestamp":1643575448525,"user_tz":-60,"elapsed":261,"user":{"displayName":"liad magen","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhooSp6YPa71TxASiE-qXyTjNNqr4N5dTOQvTcZ=s64","userId":"03421638585722407653"}}},"source":["example['answer']"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"},"text/plain":["'N'"]},"metadata":{},"execution_count":10}]},{"cell_type":"markdown","metadata":{"id":"vyls_Vs7MxYj"},"source":["# Step 2: Deciding on the measurement"]},{"cell_type":"code","metadata":{"id":"r1Av7fCNHN2K","outputId":"8af8294b-5313-4efb-d9c1-eeb24dd47df2","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1643575472208,"user_tz":-60,"elapsed":262,"user":{"displayName":"liad magen","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhooSp6YPa71TxASiE-qXyTjNNqr4N5dTOQvTcZ=s64","userId":"03421638585722407653"}}},"source":["amt = int(0.75 * len(pp_examples))\n","train_examples, test_examples = pp_examples[:amt], pp_examples[amt:]\n","\n","print(len(train_examples), len(test_examples))"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["19393 6465\n"]}]},{"cell_type":"markdown","metadata":{"id":"ds9ZfBzmNXjN"},"source":["We'll define a classifier evaluator.\n","\n","Given a set of examples and an evaluator, it returns the accuracy score"]},{"cell_type":"code","metadata":{"id":"r-uR21gwNGo1"},"source":["def evaluate_classifier(examples, pp_resolver):\n","    \"\"\"\n","    examples: a list of {'pp':(v,n1,p,n2), 'answer':answer }\n","    pp_resolver has a classify() function: from (v,n1,p,n2) to 'N' / 'V'\n","    \"\"\"\n","    correct = 0.0\n","    incorrect = 0.0\n","    for example in examples:\n","        answer = pp_resolver.classify(example['pp'])\n","        if answer == example['answer']:\n","            correct += 1\n","        else:\n","            incorrect += 1\n","    return correct / (correct + incorrect)\n"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"w8v47ip3OkRi"},"source":["# Classifiers"]},{"cell_type":"markdown","metadata":{"id":"dUdapHv7NzVD"},"source":["Let's test it on an extremely naive classifiers:"]},{"cell_type":"code","metadata":{"id":"z9gXjgytNJLN"},"source":["class AlwaysSayN:\n","    \"\"\"\n","    This naive clasifier answers always with 'Noun'\n","    \"\"\"\n","    def __init__(self): pass\n","    def classify(self, pp):\n","        return 'N'\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"h7DkSKB1NScS"},"source":["class AlwaysSayV:\n","    \"\"\"\n","    This naive clasifier answers always with 'Verb'\n","    \"\"\"\n","    def __init__(self): pass\n","    def classify(self, pp):\n","        return 'V'\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","source":["evaluate_classifier(test_examples, AlwaysSayV())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Qk8WtRXdtr1D","executionInfo":{"status":"ok","timestamp":1643575479335,"user_tz":-60,"elapsed":9,"user":{"displayName":"liad magen","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhooSp6YPa71TxASiE-qXyTjNNqr4N5dTOQvTcZ=s64","userId":"03421638585722407653"}},"outputId":"5612808c-5a79-457c-b32b-030c41fab6d4"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.4634184068058778"]},"metadata":{},"execution_count":15}]},{"cell_type":"code","metadata":{"id":"Y61B9XkjNT2u","outputId":"d0c468cc-f834-44bb-c457-25a03c8fe392","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1643575480395,"user_tz":-60,"elapsed":11,"user":{"displayName":"liad magen","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhooSp6YPa71TxASiE-qXyTjNNqr4N5dTOQvTcZ=s64","userId":"03421638585722407653"}}},"source":["evaluate_classifier(test_examples, AlwaysSayN())\n"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.5365815931941222"]},"metadata":{},"execution_count":16}]},{"cell_type":"markdown","metadata":{"id":"3xHV9Q9WOOFC"},"source":["We can see that saying always 'Noun', leads to an accuracy result of 53%.\n","\n","---\n","\n","\n","\n","It also means that our dataset is quite balaneced ;)\n","\n","We could, instead, have tested which class has the majority and simply select it:"]},{"cell_type":"code","metadata":{"id":"eozkgMzfOCWD"},"source":["class MajorityClassResolver:\n","    def __init__(self, training_examples):\n","        answers = [item['answer'] for item in training_examples]\n","        num_n = len([a for a in answers if a == 'N'])\n","        num_v = len([a for a in answers if a == 'V'])\n","        if num_v > num_n:\n","            self.answer = 'V'\n","        else:\n","            self.answer = 'N'\n","    def classify(self, pp):\n","        return self.answer\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"SGM5CODLODIv","outputId":"cdfd9a18-30c8-4b3e-bd90-8e42ab63fbb0","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1643575484545,"user_tz":-60,"elapsed":5,"user":{"displayName":"liad magen","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhooSp6YPa71TxASiE-qXyTjNNqr4N5dTOQvTcZ=s64","userId":"03421638585722407653"}}},"source":["evaluate_classifier(test_examples, MajorityClassResolver(train_examples))"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.5365815931941222"]},"metadata":{},"execution_count":18}]},{"cell_type":"markdown","source":["Or make it a bit more sophisticated by peeking at the training examples:"],"metadata":{"id":"1fQDTH8YuX9t"}},{"cell_type":"code","metadata":{"id":"EVTth8ybNUkQ"},"source":["class LookupResolver:\n","    def __init__(self, training_examples):\n","        self.answers = {}\n","        for item in training_examples:\n","            self.answers[item['pp']] = item['answer']\n","        self.backoff = MajorityClassResolver(training_examples)\n","        \n","    def classify(self, pp):\n","        if pp in self.answers:\n","            return self.answers[pp]\n","        else:\n","            return self.backoff.classify(pp)\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"gqi-FzCAN71L","outputId":"7d0881b4-cc54-456e-b65e-f1d9959c78b6","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1643021694991,"user_tz":-60,"elapsed":415,"user":{"displayName":"liad magen","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"03421638585722407653"}}},"source":["evaluate_classifier(test_examples, LookupResolver(train_examples))"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.6009280742459396"]},"metadata":{},"execution_count":17}]},{"cell_type":"markdown","metadata":{"id":"Rm2DFH7YPN_Z"},"source":["# Exercise (Optional) - Your Classifier:"]},{"cell_type":"markdown","metadata":{"id":"BFRReTKOHTN8"},"source":["Implement a discriminative PP-attachment model, using a classifier of your choice (i.e. - Naive Bayes Classifier https://web.stanford.edu/~jurafsky/slp3/4.pdf) from a toolkit such as [sklearn](https://scikit-learn.org/stable/modules/generated/sklearn.naive_bayes.GaussianNB.html#sklearn.naive_bayes.GaussianNB).\n","\n","Possible features:\n","\n","Single items ​\n","* Identity of v ​\n","* Identity of p ​\n","* Identity of n1 ​\n","* Identity of n2 ​\n","\n","Pairs:​\n","* Identity of (v, p) ​\n","* Identity of (n1, p) ​\n","* Identity of (p, n1)​\n","\n","Triplets:​\n","* Identity of (v, n1, p)​\n","* Identity of (v, p, n2) ​\n","* Identity of (n1, p, n2) ​\n","\n","Quadruple:​\n","* Identity of (v, n1, p, n2)​\n","\n","\n","Corpus Level:​\n","\n","* Have we seen the (v, p) pair in a 5-word window in a big corpus?​\n","* Have we seen the (n1, p) pair in a 5-word window in a big corpus? ​\n","* Have we seen the (n1, p, n2) triplet in a 5-word window in a big corpus?​\n","*  Also: we can use counts, or binned counts.​\n","\n","Distance:​\n","* Distance (in words) between v and p ​\n","* Distance (in words) between n1 and p​\n","\n","\n","Try thinking of additional text-features that may assist for this problem.\n","\n","Note: You can use Bag-of-Words (BoW) with CountVectorizer to represent the words."]},{"cell_type":"code","source":["from sklearn.naive_bayes import GaussianNB\n","from sklearn.feature_extraction.text import CountVectorizer"],"metadata":{"id":"JgFTb2_0vpKQ"},"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"LfxK2XclN-PR"},"source":["class NaiveBayesClassifier():\n","  \n","  def __init__(self, training_examples):\n","    classifier = GaussianNB()\n","    \n","  def classify(self, pp):\n","    pass"],"execution_count":null,"outputs":[]},{"cell_type":"code","source":["evaluate_classifier(test_examples, NaiveBayesClassifier(train_examples))"],"metadata":{"id":"q-sUorG2Korm"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[""],"metadata":{"id":"5CKFpZTgLQL_"},"execution_count":null,"outputs":[]}]}